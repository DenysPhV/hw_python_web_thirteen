"""first

Revision ID: 9f2e69a5563b
Revises: d9d8561eda5b
Create Date: 2023-08-11 13:28:34.052885

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9f2e69a5563b'
down_revision: Union[str, None] = 'd9d8561eda5b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.add_column('contacts', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('contacts', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('contacts', sa.Column('user_id', sa.Integer(), nullable=False))
    op.alter_column('contacts', 'first_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('contacts', 'last_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('contacts', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('contacts', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('contacts', 'birthday',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_foreign_key(None, 'contacts', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('notes', sa.Column('user_id', sa.Integer(), nullable=False))
    op.alter_column('notes', 'text',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_foreign_key(None, 'notes', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'notes', type_='foreignkey')
    op.alter_column('notes', 'text',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('notes', 'user_id')
    op.drop_constraint(None, 'contacts', type_='foreignkey')
    op.alter_column('contacts', 'birthday',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('contacts', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('contacts', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('contacts', 'last_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('contacts', 'first_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('contacts', 'user_id')
    op.drop_column('contacts', 'updated_at')
    op.drop_column('contacts', 'created_at')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
